name: Compile release general kernel

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      kernel_source:
        description: "Select the kernel source"
        required: false
        default: "unifreq"
        type: choice
        options:
          - unifreq
          - codesnas
      kernel_version:
        description: "Select kernel version"
        required: false
        default: "5.15.162"
        type: string
      kernel_auto:
        description: "Auto use the latest kernel"
        required: false
        default: false
        type: boolean
      kernel_package:
        description: "Select compile package list"
        required: false
        default: "all"
        type: choice
        options:
          - all
          - dtbs
      kernel_toolchain:
        description: "Select the compilation toolchain"
        required: false
        default: "gcc"
        type: choice
        options:
          - clang
          - gcc
          - gcc-11.3
          - gcc-12.2
          - gcc-12.3
          - gcc-13.2
          - gcc-13.3
      compress_format:
        description: "Set the initrd compression format"
        required: false
        default: "xz"
        type: choice
        options:
          - xz
          - gzip
          - zstd
          - lzma
      kernel_sign:
        description: "Set the kernel custom signature"
        required: false
        default: "-ophub"
        type: choice
        options:
          - -ophub
          - -happy-new-year
          - -dragon-boat-festival
          - -mid-autumn-festival
          - -happy-national-day
          - -merry-christmas
          - -spring-plowing
          - -summer-growing
          - -autumn-harvesting
          - -winter-storing
          - -1-7d9483ff60109a7caf36266e8917014e
      kernel_config:
        description: "Set the path of kernel .config"
        required: false
        default: "kernel-config/release/general"
        type: choice
        options:
          - kernel-config/release/general
          - false

env:
  TZ: America/New_York

jobs:
  build:
    runs-on: ubuntu-22.04
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialization environment
        id: init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi $(docker images -q) 2>/dev/null
          [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
          sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
          sudo swapoff -a
          sudo rm -f /swapfile /mnt/swapfile
          sudo -E apt-get -y update
          sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
          sudo -E apt-get -y install $(curl -fsSL https://is.gd/depend_ubuntu2204_armbian)
          sudo -E systemctl daemon-reload
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo sed -i '/NVM_DIR/d;/skel/d' /root/{.bashrc,.profile}
          sudo rm -rf ~/{.cargo,.dotnet,.rustup}
          sudo timedatectl set-timezone "${TZ}"
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Create simulated physical disk
        id: disk
        run: |
          mnt_size=$(expr $(df -h /mnt | tail -1 | awk '{print $4}' | sed 's/[[:alpha:]]//g' | sed 's/\..*//') - 1)
          root_size=$(expr $(df -h / | tail -1 | awk '{print $4}' | sed 's/[[:alpha:]]//g' | sed 's/\..*//') - 4)
          sudo truncate -s "${mnt_size}"G /mnt/mnt.img
          sudo truncate -s "${root_size}"G /root.img
          sudo losetup /dev/loop6 /mnt/mnt.img
          sudo losetup /dev/loop7 /root.img
          sudo pvcreate /dev/loop6
          sudo pvcreate /dev/loop7
          sudo vgcreate github /dev/loop6 /dev/loop7
          sudo lvcreate -n runner -l 100%FREE github
          sudo mkfs.xfs /dev/github/runner
          sudo mkdir -p /builder
          sudo mount /dev/github/runner /builder
          sudo chown -R runner.runner /builder
          df -Th

      - name: Create a mapped directory
        id: mapped
        working-directory: /builder
        run: |
          df -hT ${PWD}
          mkdir -p /builder/{kernel,output}
          ln -sf /builder/kernel /home/runner/work/_actions/ophub/amlogic-s9xxx-armbian/main/compile-kernel/kernel
          ln -sf /builder/output /home/runner/work/_actions/ophub/amlogic-s9xxx-armbian/main/compile-kernel/output
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Checkout specific commit
        uses: actions/checkout@v4
        with:
          repository: unifreq/linux-5.15.y
          ref: 244dce52c74abd24de772a07f83522493c888412
          path: kernel-source

      - name: Update Makefile version
        working-directory: kernel-source
        run: |
          echo "Current directory: $(pwd)"
          echo "Makefile content before modification:"
          cat Makefile | grep -E '^(VERSION|PATCHLEVEL|SUBLEVEL|EXTRAVERSION) ='
          
          sed -i 's/^SUBLEVEL = .*/SUBLEVEL = 162/' Makefile
          
          echo "Makefile content after modification:"
          cat Makefile | grep -E '^(VERSION|PATCHLEVEL|SUBLEVEL|EXTRAVERSION) ='
          
          if ! grep -q '^SUBLEVEL = 162' Makefile; then
            echo "Failed to update SUBLEVEL in Makefile"
            exit 1
          fi
          
          # Check if EXTRAVERSION exists, if not, add it
          if ! grep -q '^EXTRAVERSION =' Makefile; then
            echo "EXTRAVERSION not found, adding it..."
            echo "EXTRAVERSION =" >> Makefile
          fi
          
          echo "Final Makefile content:"
          cat Makefile | grep -E '^(VERSION|PATCHLEVEL|SUBLEVEL|EXTRAVERSION) ='

      - name: Compile the kernel
        uses: ophub/amlogic-s9xxx-armbian@main
        with:
          build_target: kernel
          kernel_source: ${{ github.workspace }}/kernel-source
          kernel_version: 5.15.162
          kernel_auto: false
          kernel_package: ${{ inputs.kernel_package }}
          kernel_toolchain: ${{ inputs.kernel_toolchain }}
          kernel_sign: ${{ inputs.kernel_sign }}
          kernel_config: ${{ inputs.kernel_config }}
          compress_format: ${{ inputs.compress_format }}

      - name: Upload Kernel to Release
        if: env.PACKAGED_STATUS == 'success' && !cancelled()
        uses: ncipollo/release-action@main
        with:
          tag: kernel_5.15.162
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Notification of build failure
        if: failure()
        run: |
          echo "The kernel compilation process has failed."
          exit 1
